CREATE DATABASE ONURTEST

USE ONURTEST


CREATE TABLE Categories(
	CategoryID int primary key,
	CategoryName nvarchar(MAX)
);

CREATE TABLE SubCategories(
	SubCategoryID INT PRIMARY KEY,
    SubCategoryName NVARCHAR(100),
    ParentCategoryID INT,
    FOREIGN KEY (ParentCategoryID) REFERENCES Categories(CategoryID)
);




DECLARE @CategoryID INT = 1;
WHILE @CategoryID <= 10 
BEGIN
    INSERT INTO Categories (CategoryID, CategoryName)
    VALUES (@CategoryID, 'Category ' + CAST(@CategoryID AS NVARCHAR(10)));

    SET @CategoryID = @CategoryID + 1;
END

DECLARE @SubCategoryID INT = 1;
DECLARE @ParentCategoryID INT;
WHILE @SubCategoryID <= 2000 
BEGIN
    SET @ParentCategoryID = (SELECT TOP 1 CategoryID FROM Categories ORDER BY NEWID());

    INSERT INTO SubCategories (SubCategoryID, SubCategoryName, ParentCategoryID)
    VALUES (@SubCategoryID, 'SubCategory ' + CAST(@SubCategoryID AS NVARCHAR(10)), @ParentCategoryID);

    SET @SubCategoryID = @SubCategoryID + 1;
END






CREATE PROCEDURE test3
    @CategoryID INT
AS
BEGIN
    WITH CategoryHierarchy AS
    (
        SELECT 
            c.CategoryID AS ID,
            CAST(c.CategoryName AS NVARCHAR(MAX)) AS Name,
            NULL AS ParentCategoryID,
            CAST(c.CategoryName AS NVARCHAR(MAX)) AS FullPath, 
            0 AS Level
        FROM Categories c
        WHERE c.CategoryID = @CategoryID

        UNION ALL

        SELECT 
            s.SubCategoryID AS ID,
            CAST(s.SubCategoryName AS NVARCHAR(MAX)) AS Name, 
            s.ParentCategoryID,
            CAST(ch.FullPath + ' -> ' + s.SubCategoryName AS NVARCHAR(MAX)) AS FullPath,
            ch.Level + 1
        FROM SubCategories s
        INNER JOIN CategoryHierarchy ch ON s.ParentCategoryID = ch.ID
    )
    SELECT * FROM CategoryHierarchy
END;


EXEC test3 3;
